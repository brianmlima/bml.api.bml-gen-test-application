package org.bml.bml.gen.test.application.v0.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import java.util.UUID;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Version;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.experimental.Accessors;
import lombok.experimental.FieldNameConstants;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.UpdateTimestamp;

/**
 * Generated by API Builder - https://www.apibuilder.io Service version: 0.0.1 apibuilder 0.15.11
 * app.apibuilder.io/bml/bml-gen-test-application/0.0.1/bml_lombok
 *
 * <p>WARNING: not all features (notably unions) and data types work with the java generator yet.
 * please contact brianmlima@gmail.com
 *
 * <p>This is the top level in the system. It represents a specific client.
 */
@Accessors(fluent = true)
@AllArgsConstructor
@NoArgsConstructor
@FieldNameConstants
@EqualsAndHashCode
@Data
@Builder(toBuilder = true)
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@Entity
@Table(name = "account")
public class Account {
  private static final long serialVersionUID = 0L;

  public static final List<String> REQUIRED_FIELDS =
      Collections.unmodifiableList(
          new LinkedList<String>(Arrays.asList(Fields.id, Fields.name, Fields.enabled)));

  /** Added By getSizeStaticFields */
  public static final int NAME_MIN_LENGTH = 1;

  /** Added By getSizeStaticFields */
  public static final int NAME_MAX_LENGTH = 255;

  /** The Universally Unique Identifier. See RFC 4122 */
  @Getter(onMethod = @__(@JsonIgnore))
  @NotNull
  @Basic(optional = true)
  @Id
  @Column(name = "id", nullable = false, unique = true, updatable = false, insertable = true)
  @GeneratedValue(generator = "UUID")
  @GenericGenerator(name = "UUID", strategy = "org.hibernate.id.UUIDGenerator")
  @JsonProperty(value = "id", required = true)
  @JsonInclude(JsonInclude.Include.ALWAYS)
  protected UUID id;

  /**
   * A unique human readable string name
   *
   * <p>Example: Universal Remonster Ltd
   */
  @Getter(onMethod = @__(@JsonIgnore))
  @NotNull
  @Size(min = Account.NAME_MIN_LENGTH, max = Account.NAME_MAX_LENGTH)
  @Basic(optional = true)
  @Column(name = "name", nullable = false, unique = false, length = 255)
  @JsonProperty(value = "name", required = true)
  @JsonInclude(JsonInclude.Include.ALWAYS)
  protected String name;

  @Getter(onMethod = @__(@JsonIgnore))
  @NotNull
  @Basic(optional = true)
  @Column(name = "enabled", nullable = false, unique = false)
  @JsonProperty(value = "enabled", required = true)
  @JsonInclude(JsonInclude.Include.ALWAYS)
  protected Boolean enabled;

  /** This resources version. Helps with update ordering and transactions. */
  @JsonProperty(value = "version", required = false)
  @Version
  @Column(name = "version")
  protected Long version;

  /** The moment this resources was created. */
  @CreationTimestamp
  @JsonProperty(value = "createdAt", required = false)
  @Column(name = "created_at")
  protected LocalDateTime createdAt;

  /** The moment this resources was last updated. */
  @UpdateTimestamp
  @JsonProperty(value = "updatedAt", required = false)
  @Column(name = "updated_at")
  protected LocalDateTime updatedAt;
}
